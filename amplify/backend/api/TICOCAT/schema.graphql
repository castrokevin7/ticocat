type FAQ @model @auth(rules: [{allow: public, provider: iam}]) {
  id: ID!
  question: String!
  question_cat: String!
  answer: String!
  answer_cat: String!
  links: [AWSURL]
}

type Benefit @model @auth(rules: [{allow: public, provider: iam}]) {
  id: ID!
  benefit_id: String
  title: String
  title_cat: String
  description: String
  description_cat: String
  about_provider: String
  about_provider_cat: String
  image: String
  email: AWSEmail
  phone: AWSPhone
  instagramUrl: AWSURL
  facebookUrl: AWSURL
  websiteUrl: AWSURL
}

type Event @model @auth(rules: [{allow: public, provider: iam}]) {
  id: ID!
  event_id: String
  title: String
  title_cat: String
  image: String
  gallery: [String]
  date: String
  contact: String
  location_url: AWSURL
  description: String
  description_cat: String
  time: String
}

enum IdentificationType {
  NIE
  DNI
  PASAPORTE
}

enum BoardPosition {
  PRESIDENCIA
  VICEPRESIDENCIA
  TESORERIA
  SECRETARIADO
  VOCAL
}

type Associate @model @auth(rules: [{allow: public, provider: iam}]) {
  id: ID!
  name: String
  birthday: String
  address: String
  email: AWSEmail
  inscription_date: String
  phone: AWSPhone
  nationality: String
  identification: String
  identification_type: IdentificationType
  board_position: BoardPosition
  associate_id: String
  bio: String
  profile_picture: String
}
 